{'aux_num': 256, 'aux_mal_num': 256, 'seed': 0, 'batch_size': 64, 'num_workers': 0, 'split_ratio': 0.5}
{'target_class': 0, 'orign_class': 1, 'topk': 20, 'topk2': 40, 'gamma': 10.0, 'target_bit': 50}
{'permission_range': [0, 147], 'permission_vec_len': 147, 'trigger_path': ''}
[+] Done Load Model
aux num:512, small_val_num:15398, val_num:15400, aux_mal_num:256
Robust_AMD_INT8(
  (vae): VAE_INT8(
    (encoder): Sequential(
      (0): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=379, out_features=600, bias=True)
      )
      (1): ELU(alpha=1.0)
      (2): Dropout(p=0.1, inplace=False)
      (3): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=600, out_features=600, bias=True)
      )
      (4): Tanh()
      (5): Dropout(p=0.1, inplace=False)
      (6): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=600, out_features=160, bias=True)
      )
    )
    (decoder): Sequential(
      (0): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=80, out_features=600, bias=True)
      )
      (1): Tanh()
      (2): Dropout(p=0.1, inplace=False)
      (3): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=600, out_features=600, bias=True)
      )
      (4): ELU(alpha=1.0)
      (5): Dropout(p=0.1, inplace=False)
      (6): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=600, out_features=379, bias=True)
      )
      (7): Softplus(beta=1, threshold=20)
      (8): Sigmoid()
    )
    (sigma_softplus): Softplus(beta=1, threshold=20)
  )
  (mlp): MLP_INT8(
    (mlp): Sequential(
      (0): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=160, out_features=40, bias=True)
      )
      (1): Tanh()
      (2): Dropout(p=0.1, inplace=False)
      (3): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=40, out_features=40, bias=True)
      )
      (4): ELU(alpha=1.0)
      (5): Dropout(p=0.1, inplace=False)
      (6): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=40, out_features=40, bias=True)
      )
      (7): ELU(alpha=1.0)
      (8): Dropout(p=0.1, inplace=False)
      (9): my_8bit_linear(
        (ori_bnb_linear): Linear8bitLt(in_features=40, out_features=2, bias=True)
      )
      (10): Softplus(beta=1, threshold=20)
    )
  )
)
[+] Done Replace Model
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0.], device='cuda:0')
[+] done load Trigger
========================Before Attack========================
[+] Start eval on small val acc
[+] Accuarcy:0.8689440187037277; correct_num:13380.0, sample_num:15398.0
[+] Malware acc 0.8763475776074815, Benign acc:0.8615404597999741
[+] Start eval on small val asr
[+] Asr@1 61.086,7699
========================Start  Attack========================
